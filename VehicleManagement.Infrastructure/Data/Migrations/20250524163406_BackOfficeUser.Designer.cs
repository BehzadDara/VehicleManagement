// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleManagement.Infrastructure.Data.DBContexts;

#nullable disable

namespace VehicleManagement.Infrastructure.Data.Migrations
{
    [DbContext(typeof(VehicleManagementDBContext))]
    [Migration("20250524163406_BackOfficeUser")]
    partial class BackOfficeUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("v")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("CarSequence");

            modelBuilder.HasSequence("MotorcycleSequence");

            modelBuilder.Entity("VehicleManagement.DomainModel.Models.BackOfficeUserAggregate.BackOfficeUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("BackOfficeUsers", "bo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "123",
                            Username = "Behzad"
                        });
                });

            modelBuilder.Entity("VehicleManagement.DomainModel.Models.CarAggregate.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [v].[CarSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gearbox")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TrackingCode")
                        .IsUnique();

                    b.ToTable("Cars", "v");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("VehicleManagement.DomainModel.Models.CarAggregate.CarOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("CarOptions", "v");
                });

            modelBuilder.Entity("VehicleManagement.DomainModel.Models.MotorcycleAggregate.Motorcycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [v].[MotorcycleSequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fuel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TrackingCode")
                        .IsUnique();

                    b.ToTable("Motorcycles", "v");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("VehicleManagement.DomainModel.Models.CarAggregate.Car", b =>
                {
                    b.OwnsMany("VehicleManagement.DomainModel.Models.CarAggregate.CarTag", "Tags", b1 =>
                        {
                            b1.Property<int>("CarId")
                                .HasColumnType("int");

                            b1.Property<string>("Title")
                                .HasMaxLength(20)
                                .HasColumnType("nvarchar(20)");

                            b1.Property<int>("Priority")
                                .HasColumnType("int");

                            b1.HasKey("CarId", "Title", "Priority");

                            b1.ToTable("CarTags", "v");

                            b1.WithOwner()
                                .HasForeignKey("CarId");
                        });

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("VehicleManagement.DomainModel.Models.CarAggregate.CarOption", b =>
                {
                    b.HasOne("VehicleManagement.DomainModel.Models.CarAggregate.Car", null)
                        .WithMany("Options")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VehicleManagement.DomainModel.Models.CarAggregate.Car", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
