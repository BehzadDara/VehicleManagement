// <auto-generated />
using EFInheritance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFInheritance.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20250517162215_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("Cat1Sequence");

            modelBuilder.HasSequence("Dog1Sequence");

            modelBuilder.Entity("EFInheritance.Models.TPC.Cat1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [Cat1Sequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<int>("Lives")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cat1");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("EFInheritance.Models.TPC.Dog1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR [Dog1Sequence]");

                    SqlServerPropertyBuilderExtensions.UseSequence(b.Property<int>("Id"));

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dog1");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("EFInheritance.Models.TPH.Animal2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Animal2");

                    b.HasDiscriminator().HasValue("Animal2");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EFInheritance.Models.TPT.Animal3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Animal3");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EFInheritance.Models.TPH.Cat2", b =>
                {
                    b.HasBaseType("EFInheritance.Models.TPH.Animal2");

                    b.Property<int>("Lives")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Cat2");
                });

            modelBuilder.Entity("EFInheritance.Models.TPH.Dog2", b =>
                {
                    b.HasBaseType("EFInheritance.Models.TPH.Animal2");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Dog2");
                });

            modelBuilder.Entity("EFInheritance.Models.TPT.Cat3", b =>
                {
                    b.HasBaseType("EFInheritance.Models.TPT.Animal3");

                    b.Property<int>("Lives")
                        .HasColumnType("int");

                    b.ToTable("Cat3");
                });

            modelBuilder.Entity("EFInheritance.Models.TPT.Dog3", b =>
                {
                    b.HasBaseType("EFInheritance.Models.TPT.Animal3");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Dog3");
                });

            modelBuilder.Entity("EFInheritance.Models.TPT.Cat3", b =>
                {
                    b.HasOne("EFInheritance.Models.TPT.Animal3", null)
                        .WithOne()
                        .HasForeignKey("EFInheritance.Models.TPT.Cat3", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFInheritance.Models.TPT.Dog3", b =>
                {
                    b.HasOne("EFInheritance.Models.TPT.Animal3", null)
                        .WithOne()
                        .HasForeignKey("EFInheritance.Models.TPT.Dog3", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
